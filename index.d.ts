/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface PulsarMessage {
  data: Array<number>
  messageId: PulsarMessageId
}
export interface PulsarMessageId {
  id: PulsarMessageIdData
  batchSize?: number
}
export interface PulsarMessageIdData {
  ledgerId: string
  entryId: string
  partition?: number
  batchIndex?: number
  ackSet: Array<number>
  batchSize?: number
}
export declare class PulsarConsumerWrapper {
  /**
   * Async factory method to create a new PulsarConsumerWrapper.
   * Called from Node.js as:
   * ```js
   * const client = await PulsarConsumerWrapper.new(brokerUrl, topic, subscriptionName, consumerName, consumerId);
   * ```
   */
  static new(brokerUrl: string, topic: string, subscriptionName: string, consumerName: string, consumerId: string, authProvider: (...args: any[]) => any): PulsarConsumerWrapper
  start(): Promise<void>
  /**
   * Retrieves the next message from Pulsar.
   * On success, returns a PulsarMessage.
   */
  next(): Promise<PulsarMessage>
  /** Acknowledges a message given its ID. */
  ack(messageId: PulsarMessageId): Promise<void>
  /** Negative-acknowledges a message given its ID. */
  nack(messageId: PulsarMessageId): Promise<void>
  /** Closes the consumer. */
  close(): Promise<void>
}
